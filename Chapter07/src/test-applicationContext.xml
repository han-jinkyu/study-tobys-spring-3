<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- dataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/testdb?verifyServerCertificate=false&amp;useSSL=false" />
        <property name="username" value="spring" />
        <property name="password" value="book" />
    </bean>

    <!-- userDao -->
    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource" />
        <property name="sqlMap">
            <map>
                <entry key="add" value="INSERT INTO users(id, name, password, level, login, recommend, email) VALUES(?, ?, ?, ?, ?, ?, ?)" />
                <entry key="get" value="SELECT * FROM users WHERE id = ?" />
                <entry key="deleteAll" value="DELETE FROM users" />
                <entry key="getCount" value="SELECT COUNT(*) FROM users" />
                <entry key="getAll" value="SELECT * FROM users ORDER BY id" />
                <entry key="update" value="UPDATE users SET name = ?, password = ?, level = ?, login = ?, recommend = ?, email = ? WHERE id = ?" />
            </map>
        </property>
    </bean>

    <!-- userService -->
    <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>

    <!-- transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- mailSender -->
    <bean id="mailSender" class="springbook.user.service.DummyMailSender" />

    <!-- DefaultAdvisorAutoProxyCreator -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

<!--    &lt;!&ndash; transactionAdvice &ndash;&gt;-->
<!--    <tx:advice id="transactionAdvice">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true" />-->
<!--            <tx:method name="*" />-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

<!--    &lt;!&ndash; AOP &ndash;&gt;-->
<!--    <aop:config>-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />-->
<!--    </aop:config>-->

    <!-- annotation drive -->
    <tx:annotation-driven />

    <!-- TestUserService -->
    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />
</beans>